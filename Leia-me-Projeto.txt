
roteiro de preparação do ambiente

 observaçoes vm criada com ubunto server 20.4 usuario wkconsultoria senha 2061614
 o disco virtual foi criado com 15 gigabites e pode ser aumentado posteriomente
 para teste usei uma vm do hyper v com 6 gigas de ram.
//--------------------------------------------------------------------------------------------
//1-instalar o docker
//--------------------------------------------------------------------------------------------
  sudo apt update
  sudo apt install apt-transport-https ca-certificates curl software-properties-common
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt update
  apt-cache policy docker-ce
  sudo apt install docker-ce
//--------------------------------------------------------------------------------------------
//2 instalar docker compose
----------------------------------------------------------------------------------------------
  mkdir -p ~/.docker/cli-plugins/
  curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
  chmod +x ~/.docker/cli-plugins/docker-compose
  docker compose version

//--------------------------------------------------------------------------------------------
// 3-inserir a chave ssh para o git (arquivos chavewk e chavewk.pub no repositorio)
------------------------------------------------------------------------------------------
  eval `ssh-agent`
  ssh-add chavewk
  Instruções: https://medium.com/featurepreneur/setting-up-ssh-key-with-github-for-ubuntu-cd8f2fabf25b

//--------------------------------------------------------------------------------------------
// 4-realizar o clone do repositorio
----------------------------------------------------------------------------------------------
  git clone git@github.com:ihungerapp/Back-end.git 

//--------------------------------------------------------------------------------------------
// 4-instalar o jenkins
----------------------------------------------------------------------------------------------

   sudo docker network create hunger-net
   sudo docker volume create jenkins-docker-data

   sudo docker run -p 8080:8080 --network hunger-net --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11
   
   sudo docker container run --name jenkins-server --detach --restart unless-stopped --network hunger-net --hostname server-hunger --publish 8080:8080 --volume jenkins-docker-data:/var jenkins/jenkins:lts-jdk11   

   sudo docker container run --name jenkins-server --detach --network hunger-net -u root --volume jenkins-docker-data:/var/jenkins_home --volume /var/run/docker.sock:/var/run/docker.sock --publish 8080:8080 --publish 50000:50000 jenkins/jenkins:lts-jdk11

   #sudo docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11
   #sudo docker container run --name jenkins-server --detach --restart unless-stopped --network hunger-net --hostname jenkins --publish 8080:8080 --volume jenkins-docker-data:/var jenkins_home jenkins/jenkins:lts-jdk11
   
   #docker run --hostname=7b85f648e4c9 --user=jenkins --env=PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin --env=LANG=C.UTF-8 --env=JENKINS_HOME=/var/jenkins_home --env=JENKINS_SLAVE_AGENT_PORT=50000 --env=REF=/usr/share/jenkins/ref --env=JENKINS_VERSION=2.375.3 --env=JENKINS_UC=https://updates.jenkins.io --env=JENKINS_UC_EXPERIMENTAL=https://updates.jenkins.io/experimental --env=JENKINS_INCREMENTALS_REPO_MIRROR=https://repo.jenkins-ci.org/incrementals --env=COPY_REFERENCE_FILE_LOG=/var/jenkins_home/copy_reference_file.log --env=JAVA_HOME=/opt/java/openjdk --volume=jenkins_home:/var/jenkins_home --volume=/var/jenkins_home -p 50000:50000 -p 8080:8080 --restart=on-failure:0 --label='org.opencontainers.image.description=The Jenkins Continuous Integration and Delivery server' --label='org.opencontainers.image.licenses=MIT' --label='org.opencontainers.image.revision=b9e129dfe9192ffb27a849520a779256bd02a235' --label='org.opencontainers.image.source=https://github.com/jenkinsci/docker' --label='org.opencontainers.image.title=Official Jenkins Docker image' --label='org.opencontainers.image.url=https://www.jenkins.io/' --label='org.opencontainers.image.vendor=Jenkins project' --label='org.opencontainers.image.version=2.375.3' --runtime=runc -d jenkins/jenkins:lts-jdk11
   #sudo docker run -u hunger -d -p 8080:8080 -p 50000:50000 -v jenkins-data:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock jenkins/jenkins:lts-jdk11
   
   //obter a senha do jenkins no container recen criado
       docker exec "id do container" cat /var/jenkins_home/secrets/initialAdminPassword
   //acessar o jenkins pelo navegador https://ipservidor:8080 instalar os plugins 
         Credentials Binding
         Config File Provider
         Locale
   // configurar o pipeline usadno o script pipeline (groove) alterar o ip de acesso do servidor 
   // inclur a chave de criptografia em manage/credentials/store/system/domain/_/ usando opçao SSH Username with private key
   // copiar o conteudo do arquivo chavewk no campo key
   //instalar a extensao SSH Pipeline Steps em  /manage/pluginManager/available

//--------------------------------------------------------------------------------------------
// 5-instalar o portainer.io
----------------------------------------------------------------------------------------------
   sudo docker volume create portainer_data
   sudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest
   //acessar pagina de configuraçao https://ipservidor:9443/ e criar a senha para o usuario admin  (na imagem esta diretrizportainer)
 

//--------------------------------------------------------------------------------------------
// 5-Iniciar a API
----------------------------------------------------------------------------------------------
sudo docker container run --name hunger-api --detach --restart unless-stopped --network back-end_Network_1 --hostname server-hunger --publish 8081:8081 -d hunger-api:latest   

curl -X POST -H 'Content-Type: application/json' -d @data.json http://localhost:8081/v1/authorization